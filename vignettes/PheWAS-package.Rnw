\documentclass{article}
\usepackage{url,Rd}
\newenvironment{example}{\begin{alltt}\small}{\end{alltt}}
%\VignetteIndexEntry{PheWAS Package}

\begin{document}
\SweaveOpts{concordance=TRUE}
\title{Phenome Wide Association Studies (PheWAS) in R}
\author{Robert J. Carroll\\
Department of Biomedical Informatics\\
Vanderbilt University School of Medicine\\
\url{phewas@vanderbilt.edu}
}
\maketitle

Packge \pkg{PheWAS} provides methods for the creation of PheWAS phenotypes, analysis, and plotting.While these methods are designed primarily for genetics based PheWAS analysis, they can perform GWAS or even phenotype only studies.

\section{Data Input}
There are many potential data sources and types; this necessitates that users handle the basic data i/o and formatting. Below are outlined some methods for importing common data into R.
\subsection{Preparing plink data}
Genome wide data is stored commonly stored in plink formats\footnote{See
  \url{http://pngu.mgh.harvard.edu/~purcell/plink/data.shtml}
  for plink data format details.}. The simplest method to import data from plink is the \code{--recodeA} parameter in plink\footnote{See \url{http://pngu.mgh.harvard.edu/~purcell/plink/dataman.shtml#recode} for details}. Running the following in a terminal will get one started:\\
\code{
plink --recodeA --bfile example\_data --extract interesting\_snps\\
\ --out r\_genotypes
}\\
This will recode the binary plink data "example\_data", extracting the SNPs under investigation to the file "r\_genotypes.raw". This raw data can be loaded into R with a single command:\\
\code{genotypes=read.table("r\_genotypes.raw",header=TRUE)}\\
Alternatively, assuming FIDs are unique, the following will load the data ready to be put into \code{phewas}.
\begin{example}
> genotypes=read.table("r\_genotypes.raw",header=TRUE)[,c(-2:-6)]
> names(genotypes)[1]="id"
\end{example}

\subsection{Data from file}
R has robust methods for loading data from files\footnote{See \code{?read.table} in R for the read methods discussed here.}. For this section we will consider two examples. The first is loading a csv file containg id, icd9, and count data as appropriate for a classic PheWAS.\\
\emph{id.icd9.count.csv}:
\begin{example}
id,icd9,count
1,410,2
1,410.1,1
1,414.0,6
2,250.02,13
...
\end{example}
This can be loaded using \code{csv.phenotypes=\\
\ read.csv("id.icd9.count.csv",colClasses=c("integer","character","integer"))}\\
Pay special attention to the \code{colClasses} parameter: we need to ensure that the ICD9 codes are read as character strings so they do not lose trailing or leading zeros. This table is appropriate for use in \code{createPhewasTable}.\\
\\
Another example is that the user may have exported their chart review data into a csv from a spreadsheet software.\\
\emph{example\_phenotype.csv}:
\begin{example}
id,T2D,max.a1c
1,T,10
2,F,NA
3,F,6
...
\end{example}
This can be loaded using \code{csv.phenotypes=read.csv("example\_phenotype.csv")}. This table loaded into R is ready to be used in \code{phewas}-either as covariates or phenotypes (outcomes). 
\subsection{Data from database}
The \pkg{RODBC} library contains great tools for importing data directly from electronic data warehouses. If one desired to use PheWAS codes in their analysis from an ICD9 billing code table, it might look like the following.
\begin{example}
> library(RODBC)
> connection=odbcConnect("MyDSN")
> icd9.codes=sqlQuery(connection,"select id, icd9, count(distinct date)
    from icd9\_codes group by id, icd9;")
> odbcClose(connection)
\end{example}
The \code{icd9.codes} data frame is ready to be used with the \code{createPhewasTable} function.
\section{Data Transformation}
The primary data transformation for this package is to convert and aggregate ICD9 codes into PheWAS codes. The function \code{createPhewasTable} allows for this conversion. Given the database data loaded from the above section, one can use the following code to create PheWAS phenotypes for use in \code{phewas}:
\begin{example}
> phenotypes=createPhewasTable(icd9.codes)
\end{example}
There are some additional options for PheWAS code translation. Users can opt to forgo exclusions using \code{add.exclusions=F}; this increases the size of the control population, but at the cost of including potentially similar diagnoses in the control sets. The \code{min.code.count} parameter allows users to alter the specificity of case selection. It can also be set to \code{NA} to allow for continuous outcomes, the code count sum by default.
\section{Phenome Wide Association Studies}
The \code{phewas} function performs the PheWAS itself. Using the examples from above, one can directly pass the parameters.
\begin{example}
> results=phewas(phenotypes=phenotypes,genotypes=genotypes)
\end{example}
If one wishes to speed up the analysis, a multi-threaded approach is available using \pkg{snowfall}.
\begin{example}
> results=phewas(phenotypes=phenotypes,genotypes=genotypes,cores=4)
\end{example}
One can additionally provide covariates. In this case, we will consider an analysis adjusted by max.a1c.
\begin{example}
> results=phewas(phenotypes=phenotypes,genotypes=genotypes,
+    covariates=csv.phenotypes[,c("id","max.a1c")])
\end{example}
An alternate method is to use the \code{data} parameter with name vectors in the \code{phenotype}, \code{genotype}, and \code{covariates} parameters.
\begin{example}
> mydata=merge(phenotypes,genotypes)
> results=phewas(phenotypes=names(phenotypes)[-1],genotypes=c("rs1234","rs5678"),
+    data=mydata)
\end{example}
The \code{phewas} function can be used for more than just generic PheWAS. In the following example, \code{outcomes} and \code{predictors} are used for a phenotype only analysis. Note that these parameters are simply alternate names for \code{phenotypes} and \code{genotypes}, respectively.
\begin{example}
> max.a1c.results=phewas(outcomes=phenotypes,
+    predictors=csv.phenotypes[,c("id","max.a1c")])
\end{example}
The \code{phewasMeta} method can assist in meta-analysis of multiple PheWAS, e.g., if one has multiple genotype platforms of data to analyze. It wraps the \code{metagen} method of the \pkg{meta} package.
\begin{example}
> results.omni1=phewas(phenotypes=phenotypes.omni1,genotypes=genotypes.omni1)
> results.omni1$study="Omni 1"
> results.omni.express=phewas(phenotypes=phenotypes.omni.express,
+    genotypes=genotypes.omni.express)
> results.omni.express$study="Omni Express"
> results.merged=rbind(results.omni1,results.omni.express)
> results.meta=phewasMeta(results.merged)
\end{example}
\section{Plotting}
Three methods for plotting data are included, \code{phewasManhattan}, \code{phenotypeManhattan}, and \code{phenotypePlot}, which wrap each other. \code{phewasManhattan} is the highest level method, and can plot PheWAS results directly from \code{phewas}.
\begin{example}
> phewasManhattan(results)
\end{example}
This method returns a \pkg{ggplot2} object, which can be further manipulated using methods from that package\footnote{See \url{http://docs.ggplot2.org/current/} for the web documentation of \pkg{ggplot2}}. The \code{...} parameter will pass further options into \code{phenotypeManhattan} and \code{phenotypePlot}. These lower level plot functions can be used in a stand-alone fashion for different types of data. For example, \code{phenotypePlot} can display information about the count for every individual of each ICD9 code.
\begin{example}
> id.phenotype.value=icd9.codes
> names(id.phenotype.value)=c("id","phenotype","value")
> phenotypePlot(id.phenotype.value,use.color=F,x.group.labels=F)
\end{example}
\section{Package Example}
The following is the complete example from the \pkg{PheWAS} package.
<<example>>=
library(PheWAS)
example(PheWAS)
@
<<label=plot,include=FALSE>>=
phewasManhattan(results, annotate.angle=0)
@
\begin{figure}
\begin{center}
<<label=fig1,fig=TRUE,echo=FALSE>>=
<<plot>>
@
\end{center}
\caption{Example PheWAS Manhattan plot}
\end{figure}
\end{document}