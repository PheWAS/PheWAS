covs$htn=!covs$htn
head(covs)
covs$smoking=covs$smoking=="t"
data=merge(covs,exome)
table(atts$lbool)
data=merge(merge(covs,exome),atts,all.x=T)
head(atts)
data=merge(merge(covs,exome),atts,by="ind_seq",all.x=T)
data$aaa=data$lbool
table(data$aaa)
data$aaa=ifelse(data$lbool,T,NA)
names(data)
data=data[,-76]
data$aaa=ifelse(data$lbool,T,NA)
data$aaa=ifelse(data$lbool=="T",T,NA)
table(data$aaa)
data[data$control]$aaa=F
data[data$control,]$aaa=F
table(data$aaa)
data$aaa=ifelse(data$lbool=="T",T,NA)
data[data$control&!is.na(data$age_at_lastscan),]$aaa=F
table(data$aaa)
?SKAT_Null_Model
names(covs)
obj<-SKAT_Null_Model(aaa ~ htn+smoking+gender+race, data=data, out_type="D")
?SKAT
names(exome)
SKAT(exome[,-1], obj, method="optimal.adj")$p.value
SKAT(as.matrix(data[,names(exome)[-1]]), obj, method="optimal.adj")$p.value
odbcClose(con)
table(exome$exm169920_0)
table(exome$exm169932_c)
?write.table
?sweave
install.packages("sweave")
?RODBC
library(RODBC)
?RODBC
RShowDoc("RODBC", package="RODBC")
library(SKAT)
library(RODBC)
#Get genetics and reviews from vger1
con=odbcConnect("vger1tnf")
exome=sqlQuery(con,"select * from Reviewer_AAA_Exome.exome_data")
atts=sqlQuery(con,"select * from Reviewer_AAA_Exome.out_table")
odbcClose(con)
#Get covariates from netezza
source('~/Dropbox/research/tnf/2014/r/sql_all.R')
con=odbcConnect("NZSQL")
covs=sqlAll(con,"select * from aaa_data_20140320")
names(covs)=tolower(names(covs))
odbcClose(con)
covs$control=covs$control=="t"
covs$htn=covs$htn=="t"
covs$smoking=covs$smoking=="t"
#Get genetics and reviews from vger1
con=odbcConnect("vger1tnf")
exome=sqlQuery(con,"select * from Reviewer_AAA_Exome.exome_data")
atts=sqlQuery(con,"select * from Reviewer_AAA_Exome.out_table")
odbcClose(con)
#Setup case/control status
data=merge(merge(covs,exome),atts,by="ind_seq",all.x=T)
data$any_a=ifelse(data$lbool=="T",T,NA)
data[data$control&!is.na(data$age_at_lastscan),]$any_a=F
#AAA only
data$aaa=ifelse(data$AAA_val==1,T,NA)
data[data$control&!is.na(data$age_at_lastscan),]$aaa=F
#TAA only
data$taa=ifelse(data$TAA_val==1,T,NA)
data[data$control&!is.na(data$age_at_lastscan),]$taa=F
#AAA, no scan restriction
data$aaa_noscan=ifelse(data$AAA_val==1,T,NA)
data[data$control,]$aaa_noscan=F
head(data)
?summary
summary(data[data$aaa,]$age)
summary(data[!data$aaa,]$age)
table(data$aaa)
data=data[data$age>=0,]
#limit to WU
data=data[data$race %in% c('W','U'),]
#aaa only analysis
obj<-SKAT_Null_Model(aaa ~ htn+smoking+gender, data=data, out_type="D") #,n.Resampling=100)
SKAT(as.matrix(data[,names(exome)[-1]]), obj, method="optimal.adj")
SKAT(as.matrix(data[,names(exome)[c(-1,-28,-29)]]), obj, method="optimal.adj")$p.value
obj<-SKAT_Null_Model(aaa_noscan ~ htn+smoking+gender, data=data, out_type="D",n.Resampling=100)
SKAT(as.matrix(data[,names(exome)[-1]]), obj, method="optimal.adj")$p.value
SKAT(as.matrix(data[,names(exome)[-1,-28,-29]]), obj, method="optimal.adj")$p.value
SKAT(as.matrix(data[,names(exome)[c(-1,-28,-29)]]), obj, method="optimal.adj")$p.value
summary(exome)
summary(exome)$mean
con=odbcConnect("NZSQL")
covs=sqlAll(con,"select * from aaa_data_20140326")
names(covs)=tolower(names(covs))
odbcClose(con)
covs$control=covs$control=="t"
covs$htn=covs$htn=="t"
covs$smoking=covs$smoking=="t"
#Setup case/control status
data=merge(merge(covs,exome),atts,by="ind_seq",all.x=T)
data$any_a=ifelse(data$lbool=="T",T,NA)
data[data$control&!is.na(data$age_at_lastscan),]$any_a=F
data$aaa=ifelse(data$AAA_val==1,T,NA)
data[data$control&!is.na(data$age_at_lastscan),]$aaa=F
#TAA only
data$taa=ifelse(data$TAA_val==1,T,NA)
data[data$control&!is.na(data$age_at_lastscan),]$taa=F
#AAA, no scan restriction
data$aaa_noscan=ifelse(data$AAA_val==1,T,NA)
data[data$control,]$aaa_noscan=F
data=data[data$race %in% c('W','U'),]
obj<-SKAT_Null_Model(aaa ~ t2d+htn+smoking+gender, data=data, out_type="D") #,n.Resampling=100)
SKAT(as.matrix(data[,names(exome)[-1]]), obj, method="optimal.adj")
talbe(data$smoking)
table(data$smoking)
library(PheWAS)
head(covs)
results=phewas(data=data,phe=c("aaa","aaa_noscan"),gen=names(exome)[-1],cov=c("htn","smoking","age","gender","t2d")
)
head(results[order(results$p),])
obj<-SKAT_Null_Model(aaa ~ t2d+htn+smoking+gender+age, data=data, out_type="D") #,n.Resampling=100)
SKAT(as.matrix(data[,names(exome)[-1]]), obj, method="optimal.adj")
con=odbcConnect("vger1tnf")
old_atts=sqlQuery(con,"select * from Reviewer_AAA.reviews")
odbcClose(con)
con=odbcConnect("NZSQL")
covs=sqlAll(con,"select * from aaa_data_20140326")
names(covs)=tolower(names(covs))
odbcClose(con)
table(covs$htn,covs$ashtn)
head(coves)
head(covs)
names(old_atts)
con=odbcConnect("vger1tnf")
old_atts=sqlQuery(con,"select * from Reviewer_AAA.reviews")
odbcClose(con)
con=odbcConnect("NZSQL")
covs=sqlAll(con,"select * from aaa_data_20140326")
names(covs)=tolower(names(covs))
odbcClose(con)
table(covs$htn,covs$ashtn)
head(old_atts)
table(old_atts$lbool, old_atts$`thoracic_aneurysm val`)
table(old_atts$lbool, old_atts$`thoracic_aneurysm val`==31)
library(RODBC)
?RODBC
RShowDoc("RODBC", package="RODBC")
d=data.frame(a=1:5,b="a",c=1:5)
d
glm(a ~ b + c, data=d)
d$b=as.character(d$b)
glm(a ~ b + c, data=d)
d$b=FALSE
glm(a ~ b + c, data=d)
?contrast
?glm
?model.matrix.default
d=data.frame(a=1:5,b="a",c=1:5)
dim(table(d$b))
dim(table(d$c))
source('~/.active-rstudio-document')
glm(a ~ b + c, data=d,contrasts=con.func)
glm(a ~ b + c, data=d,contrasts="con.func")
glm(a ~ b + c, data=d,contrasts=list(b="con.func"))
contrasts(d$b)
contrasts(d)
contrasts(c("a","b"))
contrasts(as.factor(c("a","b")))
contrasts(as.factor(c("a","b","c")))
contrasts(as.factor(c("a","b","c","c")))
contrasts(as.factor(c("a","b","c","c","d")))
d=data.frame(a=1:5,b="a",c=1:5, d=c("a","b","a","c","a"))
contrasts(d[,c(2,4)])
contrasts(d[,4)])
contrasts(d[,4])
model.matrix(d)
model.matrix(formula(a ~ b + c+ d))
model.matrix(formula(a ~ b + c+ d,data=d))
?formula
glm(a ~ b + c, data=d,contrasts=list(b="con.func"))
con.func=function(x) {print(x)
if(dim(table(x))==1) {
return(TRUE)
} else {return(contrasts(x))}}
glm(a ~ b + c, data=d,contrasts=list(b="con.func"))
debugSource('~/Dropbox/research/phewas r package/contrast.test.r')
glm(a ~ b + c, data=d,contrasts=list(b="con.func"))
conc.func(x)
con.func(x)
q
model(a ~ b,data=d)
model.matrix(a ~ b,data=d)
model.matrix(a ~ b,data=d, contrasts.arg=list(b="con.func"))
con.func(d$b)
x
debugSource('~/Dropbox/research/phewas r package/contrast.test.r')
model.matrix(a ~ b,data=d, contrasts.arg=list(b="con.func"))
?dummy.coef
contrasts(d$b,contrasts=F)
debugSource('~/Dropbox/research/phewas r package/contrast.test.r')
con.func(d$b)
con.func(d$d)
model.matrix(a ~ b,data=d, contrasts.arg=list(b="con.func"))
model.matrix(a ~ b,data=d, contrasts.arg=list(b="con.func",d="con.func"))
con.arg=list(b="con.func",d="con.func")
names(con.arg)
data=data.frame(a=1:5,b="a",c=1:5, d=c("a","b","a","c","a"))
rm(d)
model.matrix(a ~ b,data=data, contrasts.arg=list(b="con.func",d="con.func"))
model.matrix(a ~ d,data=data, contrasts.arg=list(b="con.func",d="con.func"))
model.matrix(a ~ b + d,data=data, contrasts.arg=list(b="con.func",d="con.func"))
con.func=function(x) {
return(contrasts(x,contrasts=length(unique(x))!=1))
}
model.matrix(a ~ b + d,data=data, contrasts.arg=list(b="con.func",d="con.func"))
model.matrix(a ~ d,data=data, contrasts.arg=list(b="con.func",d="con.func"))
?ctrfn
model.matrix(a ~ d,data=data, contrasts.arg=list(b=con.func,d=con.func))
model.matrix(a ~ b +d,data=data, contrasts.arg=list(b=con.func,d=con.func))
debugSource('~/Dropbox/research/phewas r package/contrast.test.r')
model.matrix(a ~ b + d,data=data, contrasts.arg=list(b=con.func,d=con.func))
model.matrix(a ~ b + d,data=data, contrasts.arg=list(b=con.func(data$b),d=con.func))
model.matrix(a ~ b + d,data=data, contrasts.arg=list(b=con.func(data$b),d=con.func(data$d)))
con.func(data$b)
length(unique(x))
con.func(data$d)
model.matrix(a ~ b + d,data=data, contrasts.arg=list(b=con.func(data$b),d=con.func(data$d)))
model.matrix(a ~ d,data=data, contrasts.arg=list(b=con.func(data$b),d=con.func(data$d)))
model.matrix(a ~ d,data=data, contrasts.arg=list(d=con.func(data$d)))
debugSource('~/Dropbox/research/phewas r package/contrast.test.r')
x
length(unique(x))
x
x
model.matrix(a ~ d,data=data, contrasts.arg=list(d=con.func(data$d)))
model.matrix(a ~ b + d,data=data, contrasts.arg=list(b=con.func(data$b),d=con.func(data$d)))
con.func(data$b)
con.func(data$b)
model.matrix(a ~ b + d,data=data, contrasts.arg=list(b=con.func(data$b),d=con.func(data$d)))
model.matrix(a ~ b + d,data=data, contrasts.arg=list(b=con.func(data$b),d=con.func(data$d)))
debugSource('~/Dropbox/research/phewas r package/contrast.test.r')
x
model.matrix(a ~ b + d,data=data, contrasts.arg=list(b=con.func(b),d=con.func(d)))
model.matrix(a ~ d,data=data, contrasts.arg=list(d=con.func(data$d)))
rm(con.func)
rm(con.arg)
rm(data)
library(RODBC)
?sqlQuery
library(PheWAS)
head(code_group_ranges)
?eigen
data=data.frame(a=sample(1000),b=sample(1000))
head(data)
eigs=eigen(cor(data,method="spearman"))
eigs[[1]]
eigs[[2]]
?princomp
pr=princomp(data)
summary(pr)
head(pr$loadings)
head(pr$scale)
?svd
s=svd(data)
head(s$d)
s$u
data=data.frame(a=sample(100),b=sample(100))
s=svd(data)
s$u
s$v
s$v*data
eigs=eigen(cor(data))
eigs
pr=princomp(data)
pr$scores
pr$loadings
pr$loadings*data
data*pr$loadings
?eig
?eigen
?library(PheWAS)
?PheWAS
?PheWAS-package
?PheWAS_package
??phewas
?phewas
library(PheWAS)
?phewasManhattan
data=data.frame(id=1:100,a1c=sample(100))
data=data.frame(id=1:100,value=sample(100),phenotype="a1c")
phenotypePlot(data)
data=data.frame(id=1:100,value=sample(100),phenotype="a1c",color=F)
phenotypePlot(data,color=F)
phenotypePlot(data,color=F,group=F)
phenotypePlot(data,use.color=F,x.group.labels=F)
source('~/Dropbox/research/phewas r package/PheWAS/R/phenotypePlot.R')
phenotypePlot(data,use.color=F,x.group.labels=F)
example(phewas)
phenotypePlot(phenotypes)
phenotypePlot(id.icd9.count)
head(id.icd9.count)
names(id.icd9.count)=c("id","phenotype","value")
phenotypePlot(id.icd9.count)
phenotypePlot(id.icd9.count,use.color=F)
phenotypePlot(id.icd9.count,use.color=F,x.group.labels=F)
phenotypePlot(id.icd9.count,use.color=F,x.group.labels=F)
library(PheWAS)
?PheWAS
?vignette
vignette(PheWAS)
vignette("PheWAS")
vignette("PheWAS-package")
q()
ex=data.frame(id=c(1,1,1,2:5),icd9=c("714.0","250.11","414.0","414.0","414.0","414.0","414.0",count=20:28))
ex=data.frame(id=c(1,1,1,2:5),icd9=c("714.0","250.11","414.0","414.0","414.0","414.0","414.0"),count=20:28))
ex=data.frame(id=c(1,1,1,2:5),icd9=c("714.0","250.11","414.0","414.0","414.0","414.0","414.0"),count=20:28)
ex=data.frame(id=c(1,1,1,2:5),icd9=c("714.0","250.11","414.0","414.0","414.0","414.0","414.0"),count=20:26)
library(PheWAS)
ex2=merge(ex,phemap)
head(ex2)
ex3=add_phewas_groups(ex2)
ex3=PheWAS::add_phewas_groups(ex2)
ex3=PheWAS:::add_phewas_groups(ex2)
names(ex2)[4]="phenotype"
ex3=PheWAS:::add_phewas_groups(ex2)
head(ex3)
ex3=PheWAS:::add_phewas_groups(ex2,keep_newlines=F)
head(ex3)
?tapply
tapply(ex3$id,ex3$group,function(x){length(distinct(x))}
)
tapply(ex3$id,ex3$group,function(x){length(unique(x))})
count_ids_by_group=function(id.icd9) {
require(PheWAS)
a=merge(id.icd9,phemap)
names(a)[names(a)=="phewas_code"]="phenotype"
b=PheWAS:::add_phewas_groups(a,keep_newlines=F)
tapply(b$id,b$group,function(x){length(unique(x))})
}
count_ids_by_group(ex)
library(PheWAS)
?PheWAS
count_ids_by_group=function(id.icd9) {
require(PheWAS)
a=merge(id.icd9,phemap)
names(a)[names(a)=="phewas_code"]="phenotype"
b=PheWAS:::add_phewas_groups(a,keep_newlines=F)
tapply(b$id,b$group,function(x){length(unique(x))})
}
id.icd9.count=read.csv("icd-count-all.csv")
count_ids_by_group(id.icd9.count)
ex=data.frame(id=c(1,1,1,2:5),icd9=c("714.0","250.11","414.0","414.0","414.0","414.0","414.0"),count=20:26)
count_ids_by_group(ex)
a=count_ids_by_group(ex)
barplot(a)
install.packages("~/Dropbox/research/phewas r package/PheWAS_0.9.3.tar.gz",repos=NULL, type="source")
install.packages("~/Dropbox/research/phewas r package/PheWAS_0.9.3.1.tar.gz",repos=NULL, type="source")
library(PheWAS)
?PheWAS
library(PheWAS)
?PheWAS
vignette("PheWAS-package")
library(RODBC)
con=odbcConnect("vger1tnf")
enb=sqlQuery("select * from enbrel_reviews")
con=odbcConnect("vger1tnf")
enb=sqlQuery("select * from enbrel_reviews")
enb=sqlQuery(con,"select * from enbrel_reviews")
hum=sqlQuery(con,"select * from humira_reviews")
rem=sqlQuery(con,"select * from remicade_reviews")
rem
?glm
library(randomForest)
?randomForest
?save
library(randomForest)
?randomForest
install.packages(dplyr)
install.packages("dplyr")
library(randomForest)
?randomForest
srqt(90000)
sqrt(90000)
library(randomForest)
?randomForest
library(randomForest)
?predict.randomForest
?randomForest
?anova
?save.image
library(PheWAS)
?phewas
?PheWAS
library(PheWAS)
?phewas
?phenotypePlot
?phenotypeManhattan
?class
?summary
?typeof
library(ggplot2)
dsmall <- diamonds[sample(nrow(diamonds), 100), ]
(d <- qplot(carat, price, data=dsmall, shape=cut))
d + scale_shape(1:100)
d + aes(shape=1:100)
d + aes(shape=as.factor(1:100))
d + aes(shape=rep.int(c(2,6),50)
)
d + aes(shape=as.factor(rep.int(c(2,6),50))
d + aes(shape=as.factor(rep.int(c(2,6),50)))
?as.factor
d + aes(shape=as.factor(rep.int(c(2,6),50),levels=1:6))
d + aes(shape=factor(rep.int(c(2,6),50),levels=1:6))
d + aes(shape=factor(rep.int(c(2,6),50),levels=1:6,exclude=NULL))
d + aes(shape=factor(c(1:6,rep.int(c(2,6),50))[-1:-6])
)
factor(c(1:6,rep.int(c(2,6),50))[-1:-6])
d + aes(shape=factor(c(1:6,rep.int(c(2,6),50))[-1:-6],exclude=NULL))
d + aes(shape=factor(c(1:6,rep.int(c(2,6),50))[-1:-6]))
attributes(factor(c(1:6,rep.int(c(2,6),50))[-1:-6]))
f=factor(c(1:6,rep.int(c(2,6),50))[-1:-6])
attributes(f)$levels=as.character(c(1:6))
f
d + aes(shape=factor(c(1:6,rep.int(c(2,6),50))[-1:-6],levels=1:6,exclude=NULL))
factor(c(1:6,rep.int(c(2,6),50))[-1:-6],levels=1:6,exclude=NULL)
d + aes(shape=as.factor(rep.int(c(2,6),50)) scale_shape_manual(values=c(2,6))
d + aes(shape=as.factor(rep.int(c(2,6),50)) + scale_shape_manual(values=c(2,6))
)
d + aes(shape=as.factor(rep.int(c(2,6),50))) + scale_shape_manual(values=c(2,6))
d + aes(shape=as.factor(rep.int(c(2,6),50)),fill=T) + scale_shape_manual(values=c(2,6))
d + aes(shape=as.factor(rep.int(c(2,6),50))) + scale_shape_manual(values=c(2,6),solid=T)
d + aes(shape=as.factor(rep.int(c(2,6),50))) + scale_shape_manual(values=c(24,25))
d + aes(shape=as.factor(rep.int(c(2,6),50))) + scale_shape_manual(values=c(1,2))
d + aes(shape=as.factor(rep.int(c(2,6),50))) + scale_shape_manual(values=c(2,6))
d + aes(shape=as.factor(rep.int(c(2,6),50))) + scale_shape_discrete(values=c(2,6))
d + aes(shape=as.factor(rep.int(c(2,6),50))) + scale_shape_discrete(c(2,6),solid=T)
d + aes(shape=as.factor(rep.int(c(2,6),50))) + scale_shape_manual(c(2,6),solid=T)
d + aes(shape=as.factor(rep.int(c(2,6),50))) + scale_shape(solid = TRUE) + scale_shape_manual(c(2,6))
d + aes(shape=as.factor(rep.int(c(2,6),50))) + scale_shape(solid = TRUE) + scale_shape_manual(values=c(2,6))
d + aes(shape=as.factor(rep.int(c(2,6),50))) +scale_shape_manual(values=c(2,6))
d + aes(shape=as.factor(rep.int(c(2,6),50)),solid=T) +scale_shape_manual(values=c(2,6))
d + aes(shape=as.factor(rep.int(c(2,6),50))) +scale_shape_manual(values=c(24,25))
d + aes(shape=as.factor(rep.int(c(2,6),50))) +scale_shape_manual(values=c(25,24))
d + aes(shape=as.factor(rep.int(c(2,6),50))) +scale_shape_manual(values=c(27,25))
d + aes(shape=as.factor(rep.int(c(2,6),50))) +scale_shape_manual(values=c(17,25))
source('~/Dropbox/research/CKDGen/analysis-jul14-old_snps.R')
a=data.frame(a=1:10,b=1:10)
a
ifelse(a,1,2)
setwd("C:/R-PheWAS/PheWAS/man")
library(PheWAS)
?generateExample
ex=generateExample
ex=generateExample()
phes=createPhewasTable(ex$id.icd9.count)
id.gender=data.frame(id=1:5000,gender=sample(c("M","F"),5000,TRUE))
phenotypes=phes
load("C:/R-PheWAS/PheWAS/data/gender_restriction.rda")
data=merge(phenotypes,id.gender,by=names(id.gender)[1],all.x=T)
?apply
head(gender_restriction)
?for
?by
dim(data)
g=dim(data)[2]
n.data=by(gender_restriction,gender_restriction$phewas_code,FUN=function(x){
if(x$male_only){
ifelse(data[,g]=="M",data[,x$phewas_code],NA)
}else if(x$female_only){
ifelse(data[,g]=="F",data[,x$phewas_code],NA)
}else{data[,x$phewas_code]}
})
class(gender_restriction$phewas_code)
current_codes=names(phenotypes)[-1]
current_gender_restriction=gender_restriction[gender_restriction$phewas_code %in% names(phenotypes)[-1],]
n.data=by(current_gender_restriction,current_gender_restriction$phewas_code,FUN=function(x){
if(x$male_only){
ifelse(data[,g]=="M",data[,x$phewas_code],NA)
}else if(x$female_only){
ifelse(data[,g]=="F",data[,x$phewas_code],NA)
}else{data[,x$phewas_code]}
})
by[[1]]
by[1]
by
n.data[[1]]
d2=rbind.fill(n.data)
?rbind.fill
d2=cbind(n.data)
n.data
d2=cbind(data[,1],n.data)
d2=cbind(n.data)
haed(d2)
head(d2)
?sapply
?data.frame
d2=sapply(n.data,function(x){a=data.frame(x[[1]])
names(a)=names(x)
a})
d2[[1]]
?apply
apply(phenotypes,2,function(x){
names(x)
} )
head(current_gender_restriction)
male_only=current_gender_restriction[current_gender_restriction$male_only,"phewas_code"]
female_only=current_gender_restriction[current_gender_restriction$female_only,"phewas_code"]
data[data[,g]=="M",female_only]=NA
data[data[,g]=="F",male_only]=NA
summary(data$182)
summary(data$`182`)
summary(phenotypes$`182`)
